---
sync_devices:
  hostname:
    commands:
      - command: "show system information | display json"
        parser: "none"
        jpath: '"system-information"[]."host-name"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{{ obj | unique | first }}"
  serial:
    commands:
      - command: "show system information | display json"
        parser: "none"
        jpath: '"system-information"[]."serial-number"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{{ obj | unique | first }}"
  device_type:
    commands:
      - command: "show system information | display json"
        parser: "none"
        jpath: '"system-information"[]."hardware-model"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{{ obj | unique | first | upper }}"
  mgmt_interface:
    commands:
      - command: "show interfaces terse | display json"
        parser: "none"
        jpath: '"interface-information"[]."physical-interface"[]."logical-interface"[].{name: name[].data, ip: "address-family"[]."interface-address"[]."ifa-local"[].data}'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% for entry in obj %}{% if entry['ip'] %}{% for ipaddr in entry['ip'] %}{% if original_host in ipaddr %}{{ entry['name'] | first }}{% endif %}{% endfor %}{% endif %}{% endfor %}"
  mask_length:
    commands:
      - command: "show configuration interfaces | display json"
        parser: "none"
        jpath: "configuration.interfaces.interface[].unit[?family.inet.address[?contains(name, `{{ obj }}`)]][].family.*.address[][].name"
        post_processor: "{{ obj[0].split('/')[1] }}"
        iterable_type: "int"
sync_network_data:
  serial:
    commands:
      - command: "show system information | display json"
        parser: "none"
        jpath: '"system-information"[]."serial-number"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{{ obj | unique | first }}"
  interfaces:
    root_key: true
    commands:
      - command: "show configuration interfaces | display json"
        parser: "none"
        # when root_key=true this extracted value is what becomes interable in keys using __ under `current_key`.
        jpath: 'configuration.interfaces.interface[].{name: name, units:unit[].name}'   # yamllint disable-line rule:quoted-strings
        post_processor: "{{ obj | junos_get_valid_interfaces | tojson }}"
  interfaces__type:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]["physical-interface"[?name[?data==`{{ current_key.split(".")[0] }}`]]][][]."link-level-type"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% if 'ae' in current_key %}lag{% elif obj | length > 0 %}{{ obj[0] | map_interface_type }}{% else %}other{% endif %}"
        iterable_type: "str"
  interfaces__ip_addresses:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]."physical-interface"[].["logical-interface"[?name[?data==`{{ current_key }}`]]][][].{prefix_length: "address-family"[]."interface-address"[]."ifa-destination"[].data, ip_address: "address-family"[]."interface-address"[]."ifa-local"[].data}'  # yamllint disable-line rule:quoted-strings
        post_processor: "{{ obj | parse_junos_ip_address | tojson }}"
  interfaces__mtu:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]["physical-interface"[?name[?data==`{{ current_key.split(".")[0] }}`]]][][]."mtu"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% if obj | length > 0 %}{% if 'nlimited' in obj[0] %}9192{% else %}{{ obj[0] }}{% endif %}{% endif %}"
        iterable_type: "str"
  interfaces__mac_address:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]["physical-interface"[?name[?data==`{{ current_key }}`]]][][]."hardware-physical-address"[].data'  # yamllint disable-line rule:quoted-strings
  interfaces__description:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]["physical-interface"[?name[?data==`{{ current_key }}`]]][][]."description"[].data'  # yamllint disable-line rule:quoted-strings
        iterable_type: "str"
  interfaces__link_status:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]["physical-interface"[?name[?data==`{{ current_key.split(".")[0] }}`]]][][]."admin-status"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% if obj | length > 0 %}{{ obj[0] | interface_status_to_bool }}{% else %}{{ obj }}{% endif %}"
  interfaces__802.1Q_mode:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[]["physical-interface"[?name[?data==`{{ current_key }}`]]][][]."todo"[].data'  # yamllint disable-line rule:quoted-strings
        iterable_type: "str"
  interfaces__lag:
    commands:
      - command: "show interfaces | display json"
        parser: "none"
        jpath: '"interface-information"[].["physical-interface"[?name[?data==`{{ current_key }}`]]][][]."logical-interface"[]."address-family"[]."ae-bundle-name"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% if obj | length > 0 %}{{ obj[0].split('.')[0] }}{% else %}{{ obj }}{% endif %}"
  interfaces__vrf:
    commands:
      - command: "show interfaces routing-instance all terse | display json"
        parser: "none"
        jpath: '"interface-information"[]."physical-interface"[]["logical-interface"[?name[?data==`{{ current_key }}`]]][][].{name: "vrfname"[0].data}'  # yamllint disable-line rule:quoted-strings
        iterable_type: "dict"
  # Vlans on JUNOS are a bit hit or miss show ethernet-switching vs show vlans vs neither working also in most cases JUNOS aren't used in access land.
  interfaces__tagged_vlans:
    commands:
      - command: "show vlans | display json"
        parser: "textfsm"
        jpath: "[?contains(interfaces, `{{ current_key }}`*)].{admin_mode: admin_mode, mode: mode, access_vlan: access_vlan, trunking_vlans: trunking_vlans, native_vlan: native_vlan}"
        post_processor: "{{ obj | get_vlan_data(vlan_map, 'tagged') | tojson }}"
  interfaces__untagged_vlan:
    commands:
      - command: "show vlans | display json"
        parser: "textfsm"
        jpath: "[?contains(interfaces, `{{ current_key }}`*)].{admin_mode: admin_mode, mode: mode, access_vlan: access_vlan, trunking_vlans: trunking_vlans, native_vlan: native_vlan}"
        post_processor: "{{ obj | get_vlan_data(vlan_map, 'untagged') | tojson }}"
  cables:
    commands:
      - command: "show lldp neighbors | display json"
        parser: "none"
        jpath: '"lldp-neighbors-information"[]."lldp-neighbor-information"[].{local_interface: "lldp-local-port-id"[0].data, remote_interface: "lldp-remote-port-id"[0].data, remote_device: "lldp-remote-system-name"[0].data}'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% set result = [] %}{% for cable in obj %}{% set _=result.append({'local_interface': cable['local_interface'], 'remote_interface': cable['remote_interface'], 'remote_device': cable['remote_device'] | remove_fqdn }) %}{% endfor %}{{ result | tojson }}"
        iterable_type: "dict"
