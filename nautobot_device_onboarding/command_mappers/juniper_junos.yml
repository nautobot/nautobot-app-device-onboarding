---
sync_devices:
  hostname:
    commands:
      - command: "show version | display json"
        use_textfsm: false
        jpath: '"software-information"[]."host-name"[].data'  # yamllint disable-line rule:quoted-strings
  serial:
    commands:
      - command: "show chassis hardware | display json"
        use_textfsm: false
        jpath: '"chassis-inventory"[]."chassis"[]."serial-number"[].data'  # yamllint disable-line rule:quoted-strings
  device_type:
    commands:
      - command: "show chassis hardware | display json"
        use_textfsm: false
        jpath: '"chassis-inventory"[]."chassis"[]."description"[].data'  # yamllint disable-line rule:quoted-strings
  mgmt_interface:
    commands:
      - command: "show interfaces terse | display json"
        use_textfsm: false
        jpath: '"interface-information"[]."physical-interface"[]."logical-interface"[].{name: name[].data, ip: "address-family"[]."interface-address"[]."ifa-local"[].data}'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% for entry in obj %}{% if entry['ip'] %}{% for ipaddr in entry['ip'] %}{% if original_host in ipaddr %}{{ entry['name'] | first }}{% endif %}{% endfor %}{% endif %}{% endfor %}"
  mask_length:
    commands:
      - command: "show route protocol direct | display json"
        use_textfsm: false
        jpath: '"route-information"[]."route-table"[]."rt"[]."rt-destination"[].data'  # yamllint disable-line rule:quoted-strings
        post_processor: "{% set mask = [] %}{% for ip_route in obj %}{% if ip_route | is_network %}{% if ip_route | ipaddress_network('version') == 4 %}{% if original_host | is_ip_within(ip_route) %}{% set _=mask.append(ip_route.split('/')[1]) %}{% endif %}{% endif %}{% endif %}{% endfor %}{{ mask | unique | first}}"
