[tool.poetry]
name = "nautobot-device-onboarding"
version = "2.0.1"
description = "A plugin for Nautobot to easily onboard new devices."
authors = ["Network to Code, LLC <opensource@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-device-onboarding"
repository = "https://github.com/nautobot/nautobot-plugin-device-onboarding"
keywords = ["nautobot", "network", "onboarding", "django"]
include = [
    "LICENSE",
    "README.md",
    "docs/images/*",
]
packages = [
    { include = "nautobot_device_onboarding" },
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
napalm = ">=2.5.0, <5"
zipp = "^3.4.0"
nautobot = "^2.0.0"

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
django-debug-toolbar = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
invoke = "*"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
yamllint = "*"
Markdown = "*"
setuptools = "*"
toml = "*"
# Rendering docs to HTML
mkdocs = "1.3.1"
# Material for MkDocs theme
mkdocs-material = "8.4.2"
# Render custom markdown for version added/changed/remove notes
mkdocs-version-annotations = "1.0.0"
# Automatic documentation from sources, for MkDocs
mkdocstrings = "0.22.0"
mkdocstrings-python = "1.1.2"
griffe = "0.30.1"

[tool.poetry.group.dev.dependencies]
pylint-nautobot = "^0.2.0"

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_nautobot, pylint_django"
ignore=".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    duplicate-code,
    too-many-lines,
    too-many-ancestors,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"

[tool.pylint-nautobot]
supported_nautobot_versions = [
    "1",
    "2"
]